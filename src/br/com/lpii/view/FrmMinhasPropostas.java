/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.lpii.view;

import br.com.lpii.dao.AlunoDAO;
import br.com.lpii.dao.AreaInteresseDAO;
import br.com.lpii.dao.ProfessorDAO;
import br.com.lpii.dao.PropostaDAO;
import br.com.lpii.model.Aluno;
import br.com.lpii.model.Professor;
import br.com.lpii.model.Proposta;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author
 */
public class FrmMinhasPropostas extends javax.swing.JFrame {

    private Professor professor;
    private Proposta proposta;

    public Professor getProfessor() {
        return professor;
    }

    public void setProfessor(Professor professor) {
        this.professor = professor;
    }

    /**
     * Método construtor
     */
    public FrmMinhasPropostas() {
        initComponents();
        gerenciaCampos("block");
        gerenciaCampos("clean");
        gerenciaBotoes(true, false, false, false);
    }

    // Método responsável de verificar se há algum campo vazio.
    public boolean temCamposVazios() {

        if (txt_titulo.getText().trim().equals("")
                || combo_area_interesse.getSelectedIndex() == 0
                || txt_descricao.getText().trim().equals("")) {

            JOptionPane.showMessageDialog(null, "Todos os campos precisam estar preenchidos");
            return true;

        }

        return false;

    }

    /**
     * Método para gerenciar campos bloquear - block | desbloquear unblock
     * limpar - clean
     */
    public void gerenciaCampos(String action) {
        switch (action) {
            case "block":
                txt_cod.setEnabled(false);
                txt_titulo.setEnabled(false);
                combo_area_interesse.setEnabled(false);
                txt_descricao.setEnabled(false);
                break;
            case "unblock":
                txt_titulo.setEnabled(true);
                combo_area_interesse.setEnabled(true);
                txt_descricao.setEnabled(true);
                break;
            case "clean":
                txt_cod.setText("");
                txt_titulo.setText("");
                combo_area_interesse.setSelectedIndex(0);
                txt_descricao.setText("");
                txt_pesquisar.setText("");
                break;
        }
    }

    /**
     * Métodos para gerenciar botões
     */
    public void gerenciaBotoes(boolean novo, boolean salvar, boolean editar, boolean excluir) {
        btn_novo.setEnabled(novo);
        btn_salvar.setEnabled(salvar);
        btn_editar.setEnabled(editar);
        btn_excluir.setEnabled(excluir);
    }

    /**
     * Método responsável por carregar dados para tabela alunos
     */
    public void toList() {
        // Instancia objeto DAO
        PropostaDAO dao = new PropostaDAO();
        // Crio um objeto areaInteresse
        AreaInteresseDAO daoAI = new AreaInteresseDAO();
        // Armazena em uma lista o retorno do método listarAlunos
        List<Proposta> lista = dao.listarMinhasPropostas(professor.getCodigo());
        // Cria o DefaultTableModel para armazenar os dados que serão exibidos na tabela
        DefaultTableModel dados = (DefaultTableModel) tbl_proposta.getModel();
        // limpa dados da tabela
        dados.setNumRows(0);

        // cada ocorrência em lista irá para um objeto Proposta
        lista.forEach((a) -> {
            // E agora será adicionado a lista na tabela. Linha a linha
            dados.addRow(new Object[]{
                a.getPropostaId(),
                a.getPropostaTitulo(),
                a.getPropostaNomeAreaInteresse(),
                a.getPropostaStatus()
            });
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txt_titulo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txt_descricao = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        combo_area_interesse = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        txt_cod = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txt_qtdPropostas = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        txt_pesquisar = new javax.swing.JTextField();
        btn_consulta_pesquisar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_proposta = new javax.swing.JTable();
        btn_novo = new javax.swing.JButton();
        btn_salvar = new javax.swing.JButton();
        btn_editar = new javax.swing.JButton();
        btn_excluir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Propostas para TCC");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 153, 51));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jLabel1.setBackground(new java.awt.Color(0, 153, 51));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Minhas Propostas");

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/logo-instituto.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel8)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPane1.setForeground(new java.awt.Color(0, 102, 51));
        jTabbedPane1.setFocusable(false);
        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setEnabled(false);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 51));
        jLabel2.setText("Título do trabalho*:");

        txt_titulo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_titulo.setForeground(new java.awt.Color(0, 102, 51));

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 102, 51));
        jLabel3.setText("Descrição*:");

        txt_descricao.setColumns(20);
        txt_descricao.setRows(5);
        jScrollPane2.setViewportView(txt_descricao);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 102, 51));
        jLabel4.setText("Área de interesse*:");

        combo_area_interesse.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        combo_area_interesse.setForeground(new java.awt.Color(0, 102, 51));
        combo_area_interesse.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione", "Python", "JavaScript", "Java", "PHP", "C#", "HTML", "CSS", "C", "Desenvolvimento Android", "Desenvolvimento iOS", "Banco de dados", "Estrutura de dados", "Machine Learning", "Desenvolvimento de Games", "Data Science", " " }));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 102, 51));
        jLabel5.setText("Cod.:");

        txt_cod.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_cod.setForeground(new java.awt.Color(0, 102, 51));

        jLabel6.setForeground(new java.awt.Color(0, 153, 51));
        jLabel6.setText("* Campos obrigatórios");

        txt_qtdPropostas.setForeground(new java.awt.Color(0, 153, 51));
        txt_qtdPropostas.setText("Carregando...");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(combo_area_interesse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_cod, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 211, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(txt_qtdPropostas)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_cod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_titulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combo_area_interesse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txt_qtdPropostas)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Cadastro de propostas", jPanel2);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        txt_pesquisar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_pesquisar.setForeground(new java.awt.Color(153, 153, 153));
        txt_pesquisar.setText("Digite um título");
        txt_pesquisar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_pesquisarFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_pesquisarFocusLost(evt);
            }
        });

        btn_consulta_pesquisar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_consulta_pesquisar.setForeground(new java.awt.Color(0, 102, 51));
        btn_consulta_pesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/zoom.png"))); // NOI18N
        btn_consulta_pesquisar.setText("Pesquisar");
        btn_consulta_pesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_consulta_pesquisarActionPerformed(evt);
            }
        });

        tbl_proposta.setForeground(new java.awt.Color(0, 153, 51));
        tbl_proposta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cod.", "Título:", "Area de Interesse", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_proposta.setGridColor(new java.awt.Color(153, 153, 153));
        tbl_proposta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_propostaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_proposta);
        if (tbl_proposta.getColumnModel().getColumnCount() > 0) {
            tbl_proposta.getColumnModel().getColumn(0).setPreferredWidth(30);
            tbl_proposta.getColumnModel().getColumn(1).setPreferredWidth(200);
            tbl_proposta.getColumnModel().getColumn(2).setPreferredWidth(100);
            tbl_proposta.getColumnModel().getColumn(3).setPreferredWidth(60);
        }

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(txt_pesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_consulta_pesquisar))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 825, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_pesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_consulta_pesquisar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(273, 273, 273))
        );

        jTabbedPane1.addTab("Minhas propostas", jPanel4);

        btn_novo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btn_novo.setForeground(new java.awt.Color(0, 102, 51));
        btn_novo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/add.png"))); // NOI18N
        btn_novo.setText("Novo");
        btn_novo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_novoActionPerformed(evt);
            }
        });

        btn_salvar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btn_salvar.setForeground(new java.awt.Color(0, 102, 51));
        btn_salvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/disk.png"))); // NOI18N
        btn_salvar.setText("Salvar");
        btn_salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_salvarActionPerformed(evt);
            }
        });

        btn_editar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btn_editar.setForeground(new java.awt.Color(0, 102, 51));
        btn_editar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/pencil.png"))); // NOI18N
        btn_editar.setText("Editar");
        btn_editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editarActionPerformed(evt);
            }
        });

        btn_excluir.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btn_excluir.setForeground(new java.awt.Color(0, 102, 51));
        btn_excluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cancel.png"))); // NOI18N
        btn_excluir.setText("Excluir");
        btn_excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_excluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(178, 178, 178)
                .addComponent(btn_novo, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_salvar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_editar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_excluir)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 886, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btn_editar, btn_excluir, btn_novo, btn_salvar});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btn_novo, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_salvar)
                    .addComponent(btn_editar)
                    .addComponent(btn_excluir))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btn_editar, btn_excluir, btn_novo, btn_salvar});

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_salvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_salvarActionPerformed

        // Verifica se há algum campo vazio
        if (!temCamposVazios()) {
            // Instancia objeto da classe PropostaDao
            PropostaDAO dao = new PropostaDAO();

            // Verifica se já existe ID
            if (!txt_cod.getText().trim().equals("") && dao.verificaProposta(Integer.parseInt(txt_cod.getText()))) {

                // Caso já exista id, confirma se usuário quer editar o tema
                int edita = JOptionPane.showConfirmDialog(null, "Você tem certeza que deseja alterar o tema: " + txt_titulo.getText() + "?");

                // Caso cliente confirme a edição
                if (edita == 0) {

                    FrmLoading loading = new FrmLoading();
                    loading.setLabel("Editando proposta...");
                    loading.setVisible(true);

                    Thread t = new Thread() {
                        public void run() {
                            /**
                             * Realiza ação responsável por editar aluno
                             */
                            Proposta proposta = dao.getProposta(Integer.parseInt(txt_cod.getText()));

                            proposta.setPropostaCodAreaInteresse(combo_area_interesse.getSelectedIndex());
                            proposta.setPropostaTitulo(txt_titulo.getText());
                            proposta.setPropostaDescricao(txt_descricao.getText());

                            // Invoca método dao responsável pela persistência da alteração
                            dao.alterarProposta(proposta);

                            // Atualiza lista de propostas
                            toList();

                            // limpa campos e gerencia botões
                            gerenciaCampos("block");
                            gerenciaCampos("clean");
                            gerenciaBotoes(true, false, false, false);
                            loading.dispose();
                        }

                    };

                    t.start();

                }

            } else { // Caso não exista ID

                if (professor.getConta_orientador() < 5) {

                    FrmLoading loading = new FrmLoading();
                    loading.setLabel("Salvando proposta...");
                    loading.setVisible(true);

                    Thread t = new Thread() {
                        public void run() {
                            professor.setConta_orientador(professor.getConta_orientador() + 1);

                            atualizaQtdPropostas();

                            ProfessorDAO daoProf = new ProfessorDAO();

                            daoProf.alterarProfessor(professor);

                            // Aqui será salvo nova proposta
                            // É criada nova propostas
                            Proposta proposta = new Proposta();

                            // Seta todos os dados (pertinentes neste momento) de uma nova proposta
                            proposta.setPropostaCodAreaInteresse(combo_area_interesse.getSelectedIndex());
                            proposta.setPropostaIdProfessor(professor.getCodigo());
                            proposta.setPropostaTitulo(txt_titulo.getText());
                            proposta.setPropostaDescricao(txt_descricao.getText());
                            proposta.setPropostaStatus("Em aberto");

                            dao.cadastrarProposta(proposta);

                            /**
                             * Limpa os campos do formulário
                             */
                            gerenciaCampos("clean");
                            gerenciaCampos("block");
                            gerenciaBotoes(true, false, false, false);

                            // atualiza lista
                            toList();
                            jTabbedPane1.setSelectedIndex(1);
                            loading.dispose();
                        }

                    };

                    t.start();

                } else {

                    JOptionPane.showMessageDialog(null, "Não é possível realizar novo cadastro.\nVocê já atingiu o número máximo de propostas cadastradas.");
                    gerenciaCampos("clean");
                    gerenciaCampos("block");
                    gerenciaBotoes(true, false, false, false);

                }

            }

        }

    }//GEN-LAST:event_btn_salvarActionPerformed

    private void btn_novoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_novoActionPerformed
        // Libera os campos para preenchimento dos dados do aluno
        gerenciaCampos("unblock");
        gerenciaCampos("clean");
        // libera o botão salvar e obloqueia os demais
        gerenciaBotoes(true, true, false, false);
        // Vai para a aba de cadstro
        jTabbedPane1.setSelectedIndex(0);
        // Foco no campo matrícula
        txt_titulo.requestFocus();
    }//GEN-LAST:event_btn_novoActionPerformed

    private void tbl_propostaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_propostaMouseClicked

        FrmLoading loading = new FrmLoading();
        loading.setLabel("Carregando Proposta...");
        loading.setVisible(true);

        Thread t = new Thread() {
            public void run() {
                // Verifica se foi disparado duplo click sobre uma linha da tabela
                if (evt.getClickCount() == 2) {

                    // Comando para carregar para outra aba
                    jTabbedPane1.setSelectedIndex(0);

                }

                // Pega os dados e envia para o formulário de propostas
                int propostaId = (int) tbl_proposta.getValueAt(tbl_proposta.getSelectedRow(), 0);

                PropostaDAO dao = new PropostaDAO();

                proposta = dao.getProposta(propostaId);

                txt_cod.setText(String.valueOf(propostaId));
                txt_titulo.setText(proposta.getPropostaTitulo());
                combo_area_interesse.setSelectedItem(proposta.getPropostaNomeAreaInteresse());
                txt_descricao.setText(proposta.getPropostaDescricao());

                gerenciaBotoes(true, false, true, true);
                loading.dispose();

                // Comando para carregar para outra aba
                jTabbedPane1.setSelectedIndex(0);

            }

        };

        t.start();


    }//GEN-LAST:event_tbl_propostaMouseClicked

    private void btn_editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editarActionPerformed

        // Verifica se botão está sendo pressionado na aba dados ou busca
        if (jTabbedPane1.getSelectedIndex() == 1) {
            // se na aba busca apenas direciona para a aba dados
            jTabbedPane1.setSelectedIndex(0);
            gerenciaCampos("unblock");
            gerenciaBotoes(true, true, false, true);
        } else if (jTabbedPane1.getSelectedIndex() == 0 && !txt_titulo.isEnabled()) {

            // Libera campos e botões
            gerenciaCampos("unblock");
            gerenciaBotoes(true, true, false, true);
        }

    }//GEN-LAST:event_btn_editarActionPerformed

    private void btn_excluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_excluirActionPerformed

        FrmLoading loading = new FrmLoading();
        loading.setLabel("Excluindo, aguarde...");
        loading.setVisible(true);

        // Cria uma Thread
        Thread t = new Thread() {
            // Implementa o método run()
            public void run() {
                /**
                 * Ação responsável por excluir Proposta
                 */
                // Cria um objeto da classe PropostaDAO
                PropostaDAO dao = new PropostaDAO();

                /**
                 * Método que irá salbar o obj Aluno no banco de dados
                 */
                dao.excluirProposta(proposta);

                // Seta o atributo que controla o número de propostas do professor decrementando 1
                professor.setConta_orientador(professor.getConta_orientador() - 1);

                // Instancia um obj do tipo professordao
                ProfessorDAO daoProf = new ProfessorDAO();
                // Atualiza no banco de dados o número de projetos
                daoProf.alterarProfessor(professor);
                // Atualiza na tela o número de propostas
                atualizaQtdPropostas();

                /**
                 * Atualiza table aluno após a edição
                 */
                toList();
                gerenciaCampos("clean");
                // Comando para carregar para outra aba
                jTabbedPane1.setSelectedIndex(1);
                loading.dispose();
            }

        };

        t.start();


    }//GEN-LAST:event_btn_excluirActionPerformed

    private void btn_consulta_pesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_consulta_pesquisarActionPerformed
        // Crio o parâmetro que será utilizado na busca
        String param = "%" + txt_pesquisar.getText() + "%";

        // Instancia objeto DAO
        AlunoDAO dao = new AlunoDAO();
        // Armazena em uma lista o retorno do método listarAlunos
        List<Aluno> lista = dao.buscaAlunos(param);
        // Cria o DefaultTableModel para armazenar os dados que serão exibidos na tabela
        DefaultTableModel dados = (DefaultTableModel) tbl_proposta.getModel();
        // limpa dados da tabela
        dados.setNumRows(0);

        // cada ocorrência em lista irá para um objeto aluno
        for (Aluno a : lista) {
            // E agora será adicionado a lista na tabela. Linha a linha
            dados.addRow(new Object[]{
                a.getMatricula(),
                a.getNome(),
                a.getCpf(),
                a.getEmail(),
                a.getTelefone(),
                a.getProposta(),
                a.getPerfil()
            });
        }
    }//GEN-LAST:event_btn_consulta_pesquisarActionPerformed

    private void txt_pesquisarFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_pesquisarFocusGained
        if (!txt_pesquisar.getText().equals("") && txt_pesquisar.getText().equals("Digite uma matrícula ou nome")) {
            txt_pesquisar.setText("");
        }
    }//GEN-LAST:event_txt_pesquisarFocusGained

    private void txt_pesquisarFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_pesquisarFocusLost
        if (txt_pesquisar.getText().equals("")) {
            txt_pesquisar.setText("Digite uma matrícula ou nome");
            toList();
        }
    }//GEN-LAST:event_txt_pesquisarFocusLost

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

        FrmLoading loading = new FrmLoading();
        loading.setLabel("Carregando propostas...");
        loading.setVisible(true);

        Thread t = new Thread() {
            public void run() {
                /**
                 * Evento responsável por carregar os dados para a tabela de
                 * aluno. O método é disparado no momento em que o formulário é
                 * ativado
                 */

                toList();
                // Método para atualizar label da qtd de propostas restantes
                atualizaQtdPropostas();
                loading.dispose();
            }

        };

        t.start();
    }//GEN-LAST:event_formWindowOpened

    public void atualizaQtdPropostas() {
        if (professor.getConta_orientador() < 5) {
            txt_qtdPropostas.setText("Você ainda pode cadastrar " + (5 - professor.getConta_orientador()) + " projetos");
        } else if (professor.getConta_orientador() >= 5) {
            txt_qtdPropostas.setText("Você atingiu o número máximo de propostas cadastradas.");
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmMinhasPropostas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmMinhasPropostas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmMinhasPropostas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmMinhasPropostas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmMinhasPropostas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_consulta_pesquisar;
    private javax.swing.JButton btn_editar;
    private javax.swing.JButton btn_excluir;
    private javax.swing.JButton btn_novo;
    private javax.swing.JButton btn_salvar;
    private javax.swing.JComboBox<String> combo_area_interesse;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tbl_proposta;
    private javax.swing.JTextField txt_cod;
    private javax.swing.JTextArea txt_descricao;
    private javax.swing.JTextField txt_pesquisar;
    private javax.swing.JLabel txt_qtdPropostas;
    private javax.swing.JTextField txt_titulo;
    // End of variables declaration//GEN-END:variables
}
